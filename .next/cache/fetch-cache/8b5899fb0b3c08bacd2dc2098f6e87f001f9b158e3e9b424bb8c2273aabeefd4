{"kind":"FETCH","data":{"headers":{"age":"1663","alt-svc":"h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400","cache-control":"max-age=3600, public","cf-cache-status":"HIT","cf-ray":"7a18f6a9b903b01b-BEG","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Thu, 02 Mar 2023 10:30:17 GMT","etag":"W/\"d679da856a53fa9c4c836cc155e7347b\"","referrer-policy":"strict-origin-when-cross-origin","serpapi-search-id":"6400743837014c15c1a7e9e7","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding","x-content-type-options":"nosniff","x-download-options":"noopen","x-frame-options":"SAMEORIGIN","x-permitted-cross-domain-policies":"none","x-request-id":"e28a6b32-4e1b-4b9a-9bed-923a6b99e005","x-robots-tag":"noindex, nofollow","x-runtime":"1.534891","x-xss-protection":"1; mode=block"},"body":""},"revalidate":31536000}